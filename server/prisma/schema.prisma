// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id       String    @id @default(uuid())
  title    String
  body     String
  comments Comment[]
  video    Video?
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
}

model User {
  id       String    @id @default(uuid())
  name     String
  comments Comment[]
  likes    Like[]
  Video    Video[]
  posts    Post[]
}

model Comment {
  id        String    @id @default(uuid())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  parent    Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentChild")
  parentId  String?
  likes     Like[]
}

model Like {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  commentId String

  @@id([userId, commentId])
}

model Video {
  id           String           @id @default(uuid())
  title        String
  description  String
  duration     String
  userId       String
  user         User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  post         Post             @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       String           @unique
  viewsCount   Int              @default(0)
  poster       String
  visibility   Video_visibility @default(PUBLIC)
  fileName     String?
  originalName String?
  createdAt    DateTime         @default(now())
}

enum Video_visibility {
  PUBLIC
  PRIVATE
}
